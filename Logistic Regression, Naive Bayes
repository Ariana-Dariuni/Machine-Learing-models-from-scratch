{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "effb0e2d",
   "metadata": {
    "id": "40i-0jDlzHZC",
    "papermill": {
     "duration": 0.012585,
     "end_time": "2024-05-03T20:01:41.285207",
     "exception": false,
     "start_time": "2024-05-03T20:01:41.272622",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# ML - Spring 2024 - Practical - 3\n",
    "\n",
    "## Practical Homework 3 - Logistic Regression, Naive Bayes\n",
    "Student Name:\n",
    "\n",
    "Student Number:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "817dc657",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:01:41.312009Z",
     "iopub.status.busy": "2024-05-03T20:01:41.311528Z",
     "iopub.status.idle": "2024-05-03T20:02:24.919200Z",
     "shell.execute_reply": "2024-05-03T20:02:24.917612Z"
    },
    "id": "1byaQeX6n5EB",
    "outputId": "41a7011f-7011-46d3-d6e8-743df3d9f020",
    "papermill": {
     "duration": 43.624191,
     "end_time": "2024-05-03T20:02:24.922081",
     "exception": false,
     "start_time": "2024-05-03T20:01:41.297890",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "!pip install typing-extensions --upgrade\n",
    "!pip install ydata-profiling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a878375f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:24.949952Z",
     "iopub.status.busy": "2024-05-03T20:02:24.949499Z",
     "iopub.status.idle": "2024-05-03T20:02:27.156257Z",
     "shell.execute_reply": "2024-05-03T20:02:27.155345Z"
    },
    "id": "aYv804Ymn5EA",
    "outputId": "ee65b685-1cae-472d-f060-5bf6789b4c1e",
    "papermill": {
     "duration": 2.224606,
     "end_time": "2024-05-03T20:02:27.158776",
     "exception": false,
     "start_time": "2024-05-03T20:02:24.934170",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2024-05-03 20:02:25--  https://www.dropbox.com/scl/fi/vs3b3rt3zof344bqq4rlb/hw3dataset.csv?rlkey=iuus9hv4rx73n99ks08tvyogc&dl=1\r\n",
      "Resolving www.dropbox.com (www.dropbox.com)... 162.125.9.18, 2620:100:601f:18::a27d:912\r\n",
      "Connecting to www.dropbox.com (www.dropbox.com)|162.125.9.18|:443... connected.\r\n",
      "HTTP request sent, awaiting response... 302 Found\r\n",
      "Location: https://ucf9fb0a430ae0fc372643abd4fd.dl.dropboxusercontent.com/cd/0/inline/CSNQ2DDdB9cKppptUwy8mDk4kR06jg8S0-x6NvbQpCGmMQQCwgJ1gxI5r3ZRKUj07ZDt6OS548CrSaPHwf7JuSDhbmsetRlLr7_UC0rT80JMlCCQhXf2urOVrmKojxVxRxHCEBPUMpKqy2FaDVHfWREI/file?dl=1# [following]\r\n",
      "--2024-05-03 20:02:26--  https://ucf9fb0a430ae0fc372643abd4fd.dl.dropboxusercontent.com/cd/0/inline/CSNQ2DDdB9cKppptUwy8mDk4kR06jg8S0-x6NvbQpCGmMQQCwgJ1gxI5r3ZRKUj07ZDt6OS548CrSaPHwf7JuSDhbmsetRlLr7_UC0rT80JMlCCQhXf2urOVrmKojxVxRxHCEBPUMpKqy2FaDVHfWREI/file?dl=1\r\n",
      "Resolving ucf9fb0a430ae0fc372643abd4fd.dl.dropboxusercontent.com (ucf9fb0a430ae0fc372643abd4fd.dl.dropboxusercontent.com)... 162.125.9.15, 2620:100:601f:15::a27d:90f\r\n",
      "Connecting to ucf9fb0a430ae0fc372643abd4fd.dl.dropboxusercontent.com (ucf9fb0a430ae0fc372643abd4fd.dl.dropboxusercontent.com)|162.125.9.15|:443... connected.\r\n",
      "HTTP request sent, awaiting response... 200 OK\r\n",
      "Length: 2182394 (2.1M) [application/binary]\r\n",
      "Saving to: '/kaggle/working/hw3dataset.csv'\r\n",
      "\r\n",
      "/kaggle/working/hw3 100%[===================>]   2.08M  --.-KB/s    in 0.07s   \r\n",
      "\r\n",
      "2024-05-03 20:02:27 (28.4 MB/s) - '/kaggle/working/hw3dataset.csv' saved [2182394/2182394]\r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "!wget -O /kaggle/working/hw3dataset.csv \"https://www.dropbox.com/scl/fi/vs3b3rt3zof344bqq4rlb/hw3dataset.csv?rlkey=iuus9hv4rx73n99ks08tvyogc&dl=1\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c2e5da7a",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:27.186302Z",
     "iopub.status.busy": "2024-05-03T20:02:27.185935Z",
     "iopub.status.idle": "2024-05-03T20:02:28.011675Z",
     "shell.execute_reply": "2024-05-03T20:02:28.010580Z"
    },
    "id": "PBD8FaLPn5EC",
    "papermill": {
     "duration": 0.843096,
     "end_time": "2024-05-03T20:02:28.014222",
     "exception": false,
     "start_time": "2024-05-03T20:02:27.171126",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import re\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b09c2a2a",
   "metadata": {
    "id": "kT9rwUBdzpSr",
    "papermill": {
     "duration": 0.011902,
     "end_time": "2024-05-03T20:02:28.038450",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.026548",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Phase 1: Explore (15 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c2f0ffd0",
   "metadata": {
    "id": "WnvXr8d2n5EC",
    "papermill": {
     "duration": 0.011705,
     "end_time": "2024-05-03T20:02:28.062252",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.050547",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Load the dataset as a dataframe. Then, check for any null values and remove the rows containing them. Finally. Also check for duplicate rows and delete them, if there are any. (p1-1: 3 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7a365e53",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:28.088443Z",
     "iopub.status.busy": "2024-05-03T20:02:28.087973Z",
     "iopub.status.idle": "2024-05-03T20:02:28.187360Z",
     "shell.execute_reply": "2024-05-03T20:02:28.185763Z"
    },
    "id": "2As5R-Cen5ED",
    "outputId": "fda10bd8-b189-4a86-b3e7-fa468e01d0bb",
    "papermill": {
     "duration": 0.115766,
     "end_time": "2024-05-03T20:02:28.190094",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.074328",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Null values:\n",
      "text        5\n",
      "sentiment   4\n",
      "------------------\n",
      "Duplicate rows:\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "# Load the dataset\n",
    "df = pd.read_csv('/kaggle/working/hw3dataset.csv')# FILL HERE\n",
    "\n",
    "print(\"Null values:\")\n",
    "# Count (and print) number of null items in each column. then drop rows containing null values.\n",
    "# FILL HERE\n",
    "print('text       ',df[\"text\"].isna().sum())\n",
    "print('sentiment  ',df[\"sentiment\"].isna().sum())\n",
    "df = df.dropna(subset=[\"text\",\"sentiment\"])\n",
    "\n",
    "\n",
    "print(\"------------------\")\n",
    "print(\"Duplicate rows:\")\n",
    "# Count (and print) number of duplicated rows. if it is non-zero, drop all duplicated rows.\n",
    "# FILL HERE\n",
    "print(df.duplicated().sum())\n",
    "# Reset Index of the data frame\n",
    "# FILL HERE\n",
    "df = df.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "beea9e82",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:28.216483Z",
     "iopub.status.busy": "2024-05-03T20:02:28.216107Z",
     "iopub.status.idle": "2024-05-03T20:02:28.231970Z",
     "shell.execute_reply": "2024-05-03T20:02:28.230728Z"
    },
    "papermill": {
     "duration": 0.031627,
     "end_time": "2024-05-03T20:02:28.234159",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.202532",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I`d have responded, if I were going</td>\n",
       "      <td>neutral</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sooo SAD I will miss you here in San Diego!!!</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>my boss is bullying me...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>what interview! leave me alone</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sons of ****, why couldn`t they put them on t...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                text sentiment\n",
       "0                I`d have responded, if I were going   neutral\n",
       "1      Sooo SAD I will miss you here in San Diego!!!  negative\n",
       "2                          my boss is bullying me...  negative\n",
       "3                     what interview! leave me alone  negative\n",
       "4   Sons of ****, why couldn`t they put them on t...  negative"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0507965b",
   "metadata": {
    "id": "b6vIaHkSn5ED",
    "papermill": {
     "duration": 0.012077,
     "end_time": "2024-05-03T20:02:28.258777",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.246700",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Plot the distribution of length of sentences in the dataframe(number of words in each sentence) (p1-2: 2 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d2005214",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:28.286184Z",
     "iopub.status.busy": "2024-05-03T20:02:28.285435Z",
     "iopub.status.idle": "2024-05-03T20:02:28.707442Z",
     "shell.execute_reply": "2024-05-03T20:02:28.706304Z"
    },
    "id": "g5FoObtnn5ED",
    "outputId": "6f8dfa4f-710a-4934-aa02-99f68e17c7f4",
    "papermill": {
     "duration": 0.438726,
     "end_time": "2024-05-03T20:02:28.710090",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.271364",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Utilize `apply` function on the `text` column of the data frame to count number of tokens in each sentence.\n",
    "word_count = df['text'].apply(lambda sentence: len(sentence.split()))# FILL HERE\n",
    "\n",
    "# Plot the distribution of word counts\n",
    "plt.figure(figsize=(10, 6))\n",
    "# FILL HERE\n",
    "plt.hist(word_count, bins=50, color='lime', edgecolor='blue')\n",
    "mn, mx = plt.xlim()\n",
    "plt.xlim(mn, mx)\n",
    "kde_xs = np.linspace(mn, mx, 300)\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.xlabel(\"sentence length\")\n",
    "plt.title(\"Distribiution of Word Counts\")\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e0ed7b8",
   "metadata": {
    "id": "eu1eZCu4n5EE",
    "papermill": {
     "duration": 0.012747,
     "end_time": "2024-05-03T20:02:28.735816",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.723069",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Plot the distribution of sentiments (p1-3 2 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3c0493a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:28.763364Z",
     "iopub.status.busy": "2024-05-03T20:02:28.762610Z",
     "iopub.status.idle": "2024-05-03T20:02:28.994471Z",
     "shell.execute_reply": "2024-05-03T20:02:28.992950Z"
    },
    "id": "Ni5euJhJn5EE",
    "outputId": "f6bb30da-8716-4a35-a121-8ab433d8fd03",
    "papermill": {
     "duration": 0.250436,
     "end_time": "2024-05-03T20:02:28.999025",
     "exception": false,
     "start_time": "2024-05-03T20:02:28.748589",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "\n",
    "# FILL HERE\n",
    "# fig, ax = plt.subplots()\n",
    "# ax.pie(df.sentiment.value_counts(), labels=df.sentiment.unique(), autopct='%1.1f%%')\n",
    "colors = ['#66b3ff','#99ff99','#ff9999','#ffcc99']\n",
    "\n",
    "counts = df['sentiment'].value_counts()\n",
    "counts.plot.pie(autopct='%1.1f%%', labels=['neutral', 'positive', 'negative'],colors = colors)\n",
    "\n",
    "\n",
    "plt.title('Distribution of Sentiments')\n",
    "plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0068e68",
   "metadata": {
    "id": "SfEXWXmen5EE",
    "papermill": {
     "duration": 0.013312,
     "end_time": "2024-05-03T20:02:29.033245",
     "exception": false,
     "start_time": "2024-05-03T20:02:29.019933",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Plot 30 most frequent words. Instead of considering the complete form of the words\n",
    "use the stemmed version of them. For more information on stemming [this](https://www.geeksforgeeks.org/introduction-to-stemming/) link.\n",
    "Also ignore stopwords(i.e. most frequent words) in your plot use the [nltk](http://nltk.org) library stopwords collection.\n",
    "Then do this for each set of positive, negative and neutral tweets separately (Each sentence in the dataset is a tweet) (p1-4 8 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d6675eea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:29.062095Z",
     "iopub.status.busy": "2024-05-03T20:02:29.061717Z",
     "iopub.status.idle": "2024-05-03T20:02:31.037307Z",
     "shell.execute_reply": "2024-05-03T20:02:31.036172Z"
    },
    "papermill": {
     "duration": 1.99275,
     "end_time": "2024-05-03T20:02:31.039561",
     "exception": false,
     "start_time": "2024-05-03T20:02:29.046811",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n",
      "[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n",
      "[nltk_data]   Package stopwords is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import nltk\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.stem import PorterStemmer\n",
    "\n",
    "nltk.download('punkt')\n",
    "nltk.download('stopwords')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "761273e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:31.070868Z",
     "iopub.status.busy": "2024-05-03T20:02:31.070114Z",
     "iopub.status.idle": "2024-05-03T20:02:31.093744Z",
     "shell.execute_reply": "2024-05-03T20:02:31.092862Z"
    },
    "id": "wafur3Cvn5EE",
    "outputId": "dff2386b-e9fb-471c-acef-1420197804ed",
    "papermill": {
     "duration": 0.042747,
     "end_time": "2024-05-03T20:02:31.096222",
     "exception": false,
     "start_time": "2024-05-03T20:02:31.053475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Store specified list of tweets into following variables\n",
    "all_tweets = df.text.tolist()# FILL HERE\n",
    "positive_tweets = df[df['sentiment'] == 'positive'].text.tolist()# FILL HERE\n",
    "negative_tweets = df[df['sentiment'] == 'negative'].text.tolist()# FILL HERE\n",
    "neutral_tweets = df[df['sentiment'] == 'neutral'].text.tolist()# FILL HERE\n",
    "\n",
    "def plot_most_frequent_words(tweets, title):\n",
    "    \"\"\"\n",
    "    This function is used to plot the frequent words along side with their frequency.\n",
    "    Args:\n",
    "        tweets: List of tweets.\n",
    "        title: Title of the diagram\n",
    "    \"\"\"\n",
    "    # Store list of english stop words (from nltk library) into the following variable\n",
    "    stop_words = set(stopwords.words('english'))\n",
    "    # Create an instance of PorterStemmer\n",
    "    stemmer = PorterStemmer()\n",
    "    \n",
    "    # Store all non-stopword words into variable `all_words` after stemming.\n",
    "    all_words = []\n",
    "    for tweet in tweets:\n",
    "        # Remove punctuation and other non-alphanumeric characters\n",
    "        tweet_cleaned = re.sub(r'[^\\w\\s]', '', tweet)\n",
    "        words = word_tokenize(tweet_cleaned)\n",
    "        for word in words:\n",
    "            if word.lower() not in stop_words:\n",
    "                stemmed_word = stemmer.stem(word.lower())\n",
    "                all_words.append(stemmed_word)\n",
    "    \n",
    "    # Count the frequency of each word\n",
    "    word_freq = {}\n",
    "    for word in all_words:\n",
    "        word_freq[word] = word_freq.get(word, 0) + 1\n",
    "    \n",
    "    # Get the most common words and their frequencies\n",
    "    sorted_word_freq = sorted(word_freq.items(), key=lambda x: x[1], reverse=True)\n",
    "    most_common_words = sorted_word_freq[:30]\n",
    "    words, frequencies = zip(*most_common_words)\n",
    "    \n",
    "    # Now plot the diagram using a line plot\n",
    "    plt.figure(figsize=(10, 8))\n",
    "    plt.plot(words, frequencies, marker='o', linestyle='-')\n",
    "    plt.title(title)\n",
    "    plt.xlabel('Words')\n",
    "    plt.ylabel('Frequency')\n",
    "    plt.xticks(rotation=45, ha='right')\n",
    "    plt.grid(True)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c35b0b0c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:31.126228Z",
     "iopub.status.busy": "2024-05-03T20:02:31.125484Z",
     "iopub.status.idle": "2024-05-03T20:02:51.181654Z",
     "shell.execute_reply": "2024-05-03T20:02:51.180449Z"
    },
    "papermill": {
     "duration": 20.074217,
     "end_time": "2024-05-03T20:02:51.184579",
     "exception": false,
     "start_time": "2024-05-03T20:02:31.110362",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_most_frequent_words(positive_tweets, '30 Most Frequent Words in Positive Tweets')\n",
    "plot_most_frequent_words(negative_tweets, '30 Most Frequent Words in Negative Tweets')\n",
    "plot_most_frequent_words(neutral_tweets, '30 Most Frequent Words in Neutral Tweets')\n",
    "plot_most_frequent_words(all_tweets, '30 Most Frequent Words in all Tweets')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02075d05",
   "metadata": {
    "id": "dHozX1sXn5EE",
    "papermill": {
     "duration": 0.017346,
     "end_time": "2024-05-03T20:02:51.219543",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.202197",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Phase 2: Preprocess(10 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e451f6f3",
   "metadata": {
    "id": "UEUZH81un5EE",
    "papermill": {
     "duration": 0.017111,
     "end_time": "2024-05-03T20:02:51.254289",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.237178",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Remove urls from tweets with regex. (Use pattern `r'https?://\\S+|www\\.\\S+'`) (p2-1 3 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a4170cf1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:51.293128Z",
     "iopub.status.busy": "2024-05-03T20:02:51.292158Z",
     "iopub.status.idle": "2024-05-03T20:02:51.350750Z",
     "shell.execute_reply": "2024-05-03T20:02:51.349825Z"
    },
    "id": "MvQDFXVBn5EE",
    "outputId": "656ce2f0-6f7f-44ac-d9e5-eb822790f638",
    "papermill": {
     "duration": 0.080851,
     "end_time": "2024-05-03T20:02:51.353212",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.272361",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Use `apply` function on the `text` column of the data frame to apply the aforementioned regex.\n",
    "df['text'] = df.text.apply(lambda x : re.sub(r'https?://\\S+|www\\.\\S+', ' ', x))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fc2423e",
   "metadata": {
    "id": "E2thF8RYn5EF",
    "papermill": {
     "duration": 0.017788,
     "end_time": "2024-05-03T20:02:51.388817",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.371029",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Remove everything except alphabetical and numerical characters (p2-2 2 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "086f4edd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:51.426662Z",
     "iopub.status.busy": "2024-05-03T20:02:51.425653Z",
     "iopub.status.idle": "2024-05-03T20:02:51.510090Z",
     "shell.execute_reply": "2024-05-03T20:02:51.508565Z"
    },
    "id": "0oEA4xxZn5EF",
    "outputId": "fc1ec3ed-175f-40b4-8b7f-f6800317e9f0",
    "papermill": {
     "duration": 0.10608,
     "end_time": "2024-05-03T20:02:51.512723",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.406643",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['text'] = df.text.replace(r'[^\\w\\s]',' ',regex = True)# FILL HERE\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f192c3fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:51.607815Z",
     "iopub.status.busy": "2024-05-03T20:02:51.607393Z",
     "iopub.status.idle": "2024-05-03T20:02:51.619073Z",
     "shell.execute_reply": "2024-05-03T20:02:51.617716Z"
    },
    "papermill": {
     "duration": 0.033245,
     "end_time": "2024-05-03T20:02:51.621379",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.588134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>I d have responded  if I were going</td>\n",
       "      <td>neutral</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sooo SAD I will miss you here in San Diego</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>my boss is bullying me</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>what interview  leave me alone</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sons of       why couldn t they put them on t...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                text sentiment\n",
       "0                I d have responded  if I were going   neutral\n",
       "1      Sooo SAD I will miss you here in San Diego     negative\n",
       "2                          my boss is bullying me     negative\n",
       "3                     what interview  leave me alone  negative\n",
       "4   Sons of       why couldn t they put them on t...  negative"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d930cdd5",
   "metadata": {
    "id": "hnOtrqJ-n5EF",
    "papermill": {
     "duration": 0.018002,
     "end_time": "2024-05-03T20:02:51.657356",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.639354",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Lower all letters. Then use nltk and tokenize tweets. Then replace each word with its root and remove the stopwords. (p2-3 5 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cb583c98",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:02:51.695413Z",
     "iopub.status.busy": "2024-05-03T20:02:51.694809Z",
     "iopub.status.idle": "2024-05-03T20:03:00.170989Z",
     "shell.execute_reply": "2024-05-03T20:03:00.169944Z"
    },
    "id": "tX806oAgn5EF",
    "outputId": "04b9c922-2621-47a3-86a3-5f88b3b6503e",
    "papermill": {
     "duration": 8.498234,
     "end_time": "2024-05-03T20:03:00.173651",
     "exception": false,
     "start_time": "2024-05-03T20:02:51.675417",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Initialize stemmer and stop_words from nltk\n",
    "stemmer = PorterStemmer() # FILL HERE\n",
    "stop_words = set(stopwords.words('english')) # FILL HERE\n",
    "df_copy = df.copy()\n",
    "\n",
    "\n",
    "# Convert all characters into lower case.\n",
    "df['text'] = df['text'].str.lower() \n",
    "# Tokenize each tweet\n",
    "df['text'] = df.text.apply(lambda x : word_tokenize(x))\n",
    "# Drop stop words\n",
    "df['text'] = df.text.apply(lambda word_list : [word for word in word_list if word not in stop_words])\n",
    "\n",
    "# Stem remaining words\n",
    "df['text'] = df.text.apply(lambda listt : list(stemmer.stem(word) for word in listt))\n",
    "\n",
    "# Store the resulting string back into the `text` column of the data frame\n",
    "df['text'] = df.text.apply(lambda listt : ' '.join(listt))\n",
    "          \n",
    "# FILL HERE\n",
    "# FILL HERE\n",
    "# FILL HERE\n",
    "# df['text'] = df.text.apply(lambda sentence: ' '.join([stemmer.stem(word) for word in sentence.split() if stemmer.stem(word) not in stop_words]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2609dc1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.212456Z",
     "iopub.status.busy": "2024-05-03T20:03:00.211589Z",
     "iopub.status.idle": "2024-05-03T20:03:00.221729Z",
     "shell.execute_reply": "2024-05-03T20:03:00.220680Z"
    },
    "id": "DuUBLmern5EF",
    "papermill": {
     "duration": 0.031698,
     "end_time": "2024-05-03T20:03:00.223779",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.192081",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>respond go</td>\n",
       "      <td>neutral</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sooo sad miss san diego</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>boss bulli</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>interview leav alon</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>son put releas alreadi bought</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            text sentiment\n",
       "0                     respond go   neutral\n",
       "1        sooo sad miss san diego  negative\n",
       "2                     boss bulli  negative\n",
       "3            interview leav alon  negative\n",
       "4  son put releas alreadi bought  negative"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3c4af89",
   "metadata": {
    "id": "LA10RX8Wn5EF",
    "papermill": {
     "duration": 0.018186,
     "end_time": "2024-05-03T20:03:00.260758",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.242572",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Phase 3: Prepare Data for Training! (20 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c3a3428",
   "metadata": {
    "id": "WUwPz4NDn5EF",
    "papermill": {
     "duration": 0.018051,
     "end_time": "2024-05-03T20:03:00.298354",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.280303",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We don't need neutral labels So Delete them from the dataset. Also, make sure there are not any unknown or Nan values at this stage. (p3-1 3 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c753b491",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.337631Z",
     "iopub.status.busy": "2024-05-03T20:03:00.337199Z",
     "iopub.status.idle": "2024-05-03T20:03:00.354640Z",
     "shell.execute_reply": "2024-05-03T20:03:00.353430Z"
    },
    "id": "DMrUTCv7n5EF",
    "outputId": "2d89b75a-7b39-4add-a20f-1213ae438857",
    "papermill": {
     "duration": 0.040046,
     "end_time": "2024-05-03T20:03:00.357317",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.317271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Drop rows containing null value\n",
    "df = df.dropna(subset=[\"text\", 'sentiment']) # FILL HERE\n",
    "\n",
    "# Drop rows with `neutral` sentiment\n",
    "df = df[df['sentiment'] != 'neutral'] # FILL HERE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "50b719f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.397482Z",
     "iopub.status.busy": "2024-05-03T20:03:00.396361Z",
     "iopub.status.idle": "2024-05-03T20:03:00.410086Z",
     "shell.execute_reply": "2024-05-03T20:03:00.409116Z"
    },
    "papermill": {
     "duration": 0.036088,
     "end_time": "2024-05-03T20:03:00.412106",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.376018",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sentiment\n",
      "positive    8579\n",
      "negative    7779\n",
      "Name: count, dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sooo sad miss san diego</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>boss bulli</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>interview leav alon</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>son put releas alreadi bought</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2am feed babi fun smile coo</td>\n",
       "      <td>positive</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            text sentiment\n",
       "1        sooo sad miss san diego  negative\n",
       "2                     boss bulli  negative\n",
       "3            interview leav alon  negative\n",
       "4  son put releas alreadi bought  negative\n",
       "6    2am feed babi fun smile coo  positive"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df['sentiment'].value_counts())\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e10d412c",
   "metadata": {
    "id": "KXslVlepn5EF",
    "papermill": {
     "duration": 0.018306,
     "end_time": "2024-05-03T20:03:00.449071",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.430765",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Convert sentiments to numerical labels. (p3-2 3 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "95fedd21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.489189Z",
     "iopub.status.busy": "2024-05-03T20:03:00.488231Z",
     "iopub.status.idle": "2024-05-03T20:03:00.498126Z",
     "shell.execute_reply": "2024-05-03T20:03:00.497064Z"
    },
    "id": "vzcpdLwun5EF",
    "outputId": "6922b540-3172-494b-8c73-455635ec1563",
    "papermill": {
     "duration": 0.03271,
     "end_time": "2024-05-03T20:03:00.500448",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.467738",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "label_encoder = LabelEncoder()\n",
    "df['sentiment'] = label_encoder.fit_transform(df['sentiment']) # FILL HERE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c035b00a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.540308Z",
     "iopub.status.busy": "2024-05-03T20:03:00.539920Z",
     "iopub.status.idle": "2024-05-03T20:03:00.549508Z",
     "shell.execute_reply": "2024-05-03T20:03:00.548618Z"
    },
    "papermill": {
     "duration": 0.032067,
     "end_time": "2024-05-03T20:03:00.551368",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.519301",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sooo sad miss san diego</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>boss bulli</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>interview leav alon</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>son put releas alreadi bought</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2am feed babi fun smile coo</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            text  sentiment\n",
       "1        sooo sad miss san diego          0\n",
       "2                     boss bulli          0\n",
       "3            interview leav alon          0\n",
       "4  son put releas alreadi bought          0\n",
       "6    2am feed babi fun smile coo          1"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0740336",
   "metadata": {
    "id": "DwVP7g5Zn5EG",
    "papermill": {
     "duration": 0.018856,
     "end_time": "2024-05-03T20:03:00.588781",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.569925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now determine X and y and split training, validation, and test data. Results should be numpy arrays. (p3-3 4 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4c8dbaa3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.628168Z",
     "iopub.status.busy": "2024-05-03T20:03:00.627809Z",
     "iopub.status.idle": "2024-05-03T20:03:00.637063Z",
     "shell.execute_reply": "2024-05-03T20:03:00.635971Z"
    },
    "id": "0yeUydWPn5EG",
    "papermill": {
     "duration": 0.031406,
     "end_time": "2024-05-03T20:03:00.639221",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.607815",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X = df['text'].values # FILL HERE\n",
    "y = df['sentiment'].values # FILL HERE\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1382)\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.11111, random_state=1382)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94946136",
   "metadata": {
    "id": "1J1DoYItn5EG",
    "papermill": {
     "duration": 0.017995,
     "end_time": "2024-05-03T20:03:00.675695",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.657700",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Do a vectorization on the data(using tf-idf or count-vectorizer). This is like feature extraction, you can use countvectorizer. (there is no need to include all words as features. you can set max features around C for ease of implementation) (p3-4 10 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e7341826",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:00.714360Z",
     "iopub.status.busy": "2024-05-03T20:03:00.713958Z",
     "iopub.status.idle": "2024-05-03T20:03:01.081614Z",
     "shell.execute_reply": "2024-05-03T20:03:01.080377Z"
    },
    "id": "69EqsJgvn5EG",
    "outputId": "b031afb3-d7da-49f9-ee62-9ddf8ce659e3",
    "papermill": {
     "duration": 0.389955,
     "end_time": "2024-05-03T20:03:01.084137",
     "exception": false,
     "start_time": "2024-05-03T20:03:00.694182",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(13086, 1000) (1636, 1000) (1636, 1000)\n",
      "(13086,) (1636,) (1636,)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n",
    "\n",
    "def vectorize_data(vectorization_type, max_features, X_train, X_val, X_test):\n",
    "    \"\"\"\n",
    "    This function gets training, validation and test data sets and vectorize all the data sets using the specified vectorization technique.\n",
    "    Args:\n",
    "        vectorization_type: Vectorization type (\"count-vectorizer\" or \"tfidf-vectorizer\")\n",
    "        max_features: Will be passed directly into the Vectorizer.\n",
    "        X_train: Training data set.\n",
    "        X_val: Validation data set.\n",
    "        X_test: Test data set.\n",
    "\n",
    "    Returns:\n",
    "        Vectorized X_train, X_val, X_test\n",
    "    \"\"\"\n",
    "    if vectorization_type=='count-vectorizer':\n",
    "        vectorizer = CountVectorizer(max_features=max_features)\n",
    "    elif vectorization_type=='tfidf-vectorizer':\n",
    "        vectorizer = TfidfVectorizer(max_features=max_features)\n",
    "\n",
    "    X_train_vectorized = vectorizer.fit_transform(X_train) # FILL HERE\n",
    "    X_val_vectorized = vectorizer.transform(X_val) # FILL HERE\n",
    "    X_test_vectorized = vectorizer.transform(X_test) # FILL HERE\n",
    "\n",
    "\n",
    "    \n",
    "    \n",
    "    return X_train_vectorized.toarray(), X_val_vectorized.toarray(), X_test_vectorized.toarray()\n",
    "\n",
    "X_train_vectorized, X_val_vectorized, X_test_vectorized = vectorize_data('count-vectorizer', 1000, X_train, X_val, X_test)\n",
    "print(X_train_vectorized.shape, X_val_vectorized.shape, X_test_vectorized.shape)\n",
    "print(y_train.shape, y_val.shape, y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be44e1fd",
   "metadata": {
    "id": "Cjcb_Jy5n5EG",
    "papermill": {
     "duration": 0.018282,
     "end_time": "2024-05-03T20:03:01.121166",
     "exception": false,
     "start_time": "2024-05-03T20:03:01.102884",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Train Your Model! (40 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa97522b",
   "metadata": {
    "id": "NyDh3JLnn5EG",
    "papermill": {
     "duration": 0.018177,
     "end_time": "2024-05-03T20:03:01.157609",
     "exception": false,
     "start_time": "2024-05-03T20:03:01.139432",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Implement Logistic Regression from scratch. (p4-1 15 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a6b8877b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:01.196495Z",
     "iopub.status.busy": "2024-05-03T20:03:01.195718Z",
     "iopub.status.idle": "2024-05-03T20:03:01.207427Z",
     "shell.execute_reply": "2024-05-03T20:03:01.206505Z"
    },
    "id": "W3lI1V03n5EG",
    "papermill": {
     "duration": 0.034016,
     "end_time": "2024-05-03T20:03:01.209817",
     "exception": false,
     "start_time": "2024-05-03T20:03:01.175801",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "from sklearn.base import BaseEstimator, ClassifierMixin\n",
    "from sklearn.datasets import load_iris\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.svm import SVC\n",
    "\n",
    "class LogisticRegressionS(BaseEstimator, ClassifierMixin):\n",
    "\n",
    "    def __init__(self, learning_rate=0.01, num_iterations=1000):\n",
    "        self.learning_rate = learning_rate\n",
    "        self.num_iterations = num_iterations\n",
    "        self.weights = None\n",
    "        self.bias = None\n",
    "    \n",
    "    # compute logits\n",
    "    def semi_pred(self, X):\n",
    "        return np.dot(X, self.weights) + self.bias\n",
    "    \n",
    "    # implement sigmoid function\n",
    "    def sigmoid(self, z):\n",
    "        return 1 / (1 + np.exp(-z))\n",
    "    \n",
    "    # compute the loss\n",
    "    def loss(self, X, y):\n",
    "        m = X.shape[0]\n",
    "        logits = self.semi_pred(X)\n",
    "        predictions = self.sigmoid(logits)\n",
    "        loss = -1/m * np.sum(y * np.log(predictions) + (1 - y) * np.log(1 - predictions))\n",
    "        return loss\n",
    "\n",
    "    # compute the gradients and return them\n",
    "    def loss_backward(self, X, y):\n",
    "        m = X.shape[0]\n",
    "        logits = self.semi_pred(X)\n",
    "        predictions = self.sigmoid(logits)\n",
    "        dz = predictions - y\n",
    "        dw = 1/m * np.dot(X.T, dz)\n",
    "        db = 1/m * np.sum(dz)\n",
    "        return dw, db\n",
    "\n",
    "    # apply gradient descent for num_iterations iterations using the functions defined above\n",
    "    def fit(self, X, y):\n",
    "        n_features = X.shape[1]\n",
    "        self.weights = np.zeros(n_features)\n",
    "        self.bias = 0\n",
    "        \n",
    "        for _ in range(self.num_iterations):\n",
    "            dw, db = self.loss_backward(X, y)\n",
    "            self.weights -= self.learning_rate * dw\n",
    "            self.bias -= self.learning_rate * db\n",
    "\n",
    "    # compute predictions\n",
    "    def predict(self, X):\n",
    "        logits = self.semi_pred(X)\n",
    "        predictions = self.sigmoid(logits)\n",
    "        return np.round(predictions)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa07afe0",
   "metadata": {
    "id": "0MmSA0o8n5EG",
    "papermill": {
     "duration": 0.018139,
     "end_time": "2024-05-03T20:03:01.246732",
     "exception": false,
     "start_time": "2024-05-03T20:03:01.228593",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Train the model and find the best parameters using sklearn gridsearch and count vectorizer. We are gonna compare your models in the next section! (p4-2 10 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "890bcba7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:03:01.286300Z",
     "iopub.status.busy": "2024-05-03T20:03:01.285504Z",
     "iopub.status.idle": "2024-05-03T20:16:24.483218Z",
     "shell.execute_reply": "2024-05-03T20:16:24.482034Z"
    },
    "id": "5beG6HW0n5EG",
    "outputId": "14a772d6-74cc-43a6-f690-21a6eae369aa",
    "papermill": {
     "duration": 803.255078,
     "end_time": "2024-05-03T20:16:24.520403",
     "exception": false,
     "start_time": "2024-05-03T20:03:01.265325",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=LogisticRegressionS(),\n",
       "             param_grid={&#x27;learning_rate&#x27;: [1, 0.1, 0.01]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=LogisticRegressionS(),\n",
       "             param_grid={&#x27;learning_rate&#x27;: [1, 0.1, 0.01]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: LogisticRegressionS</label><div class=\"sk-toggleable__content\"><pre>LogisticRegressionS()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegressionS</label><div class=\"sk-toggleable__content\"><pre>LogisticRegressionS()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(cv=3, estimator=LogisticRegressionS(),\n",
       "             param_grid={'learning_rate': [1, 0.1, 0.01]})"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "\n",
    "param_grid = {'learning_rate': [1, 0.1, 0.01]}\n",
    "\n",
    "# Initialize an instance of your model\n",
    "LRS_model = LogisticRegressionS()\n",
    "\n",
    "# Create an instance of GridSearchCV.\n",
    "grid_search = GridSearchCV(LRS_model, param_grid, cv=3)\n",
    "\n",
    "# Fit the instance of GridSearchCV on training data\n",
    "grid_search.fit(X_train_vectorized, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7dc1427d",
   "metadata": {
    "id": "VD2ziHqrn5EH",
    "papermill": {
     "duration": 0.03391,
     "end_time": "2024-05-03T20:16:24.586928",
     "exception": false,
     "start_time": "2024-05-03T20:16:24.553018",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now define sklearn LogisticRegression model and fit the model on training data (p4-3 5 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "39745349",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:16:24.629983Z",
     "iopub.status.busy": "2024-05-03T20:16:24.629559Z",
     "iopub.status.idle": "2024-05-03T20:16:25.425748Z",
     "shell.execute_reply": "2024-05-03T20:16:25.424475Z"
    },
    "id": "xI92x_ywn5EH",
    "outputId": "b2b8ea7d-8270-4fd0-be42-ae0aac668398",
    "papermill": {
     "duration": 0.820966,
     "end_time": "2024-05-03T20:16:25.429400",
     "exception": false,
     "start_time": "2024-05-03T20:16:24.608434",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=1000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=1000)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(max_iter=1000)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "LRSK_model = LogisticRegression(max_iter=1000)\n",
    "LRSK_model.fit(X_train_vectorized, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "837ca458",
   "metadata": {
    "id": "om0X_J5Zn5EH",
    "papermill": {
     "duration": 0.03288,
     "end_time": "2024-05-03T20:16:25.497262",
     "exception": false,
     "start_time": "2024-05-03T20:16:25.464382",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Report sklearn and your results on validation set (p4-4 5 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "74124d33",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:16:25.553109Z",
     "iopub.status.busy": "2024-05-03T20:16:25.552739Z",
     "iopub.status.idle": "2024-05-03T20:16:25.580390Z",
     "shell.execute_reply": "2024-05-03T20:16:25.577033Z"
    },
    "id": "fuUyfJL-n5EH",
    "outputId": "684bbced-d485-4917-a85f-0e29f242bca7",
    "papermill": {
     "duration": 0.052441,
     "end_time": "2024-05-03T20:16:25.583797",
     "exception": false,
     "start_time": "2024-05-03T20:16:25.531356",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sklearn Logistic Regression: 0.8685819070904646\n",
      "Custom Logistic Regression: 0.8740831295843521\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "predictions = grid_search.predict(X_val_vectorized) # FILL HERE\n",
    "LRS_res = accuracy_score(y_val, predictions) # FILL HERE\n",
    "\n",
    "y_pred = LRSK_model.predict(X_val_vectorized) # FILL HERE (predicting using the trained model)\n",
    "LRSK_res = accuracy_score(y_val, y_pred) # FILL HERE (computing accuracy)\n",
    "\n",
    "print('Sklearn Logistic Regression:', LRSK_res)\n",
    "print('Custom Logistic Regression:', LRS_res)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c5cfa2f",
   "metadata": {
    "id": "8-_s3We9sSRG",
    "papermill": {
     "duration": 0.033192,
     "end_time": "2024-05-03T20:16:25.650900",
     "exception": false,
     "start_time": "2024-05-03T20:16:25.617708",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Does using tf-idf as count vectorizer improve the performance? Why? (p4-4 5 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9139e5bd",
   "metadata": {
    "papermill": {
     "duration": 0.023303,
     "end_time": "2024-05-03T20:16:25.707775",
     "exception": false,
     "start_time": "2024-05-03T20:16:25.684472",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Using TF-IDF (Term Frequency-Inverse Document Frequency) as a count vectorizer can potentially improve the performance of certain text classification tasks compared to using a simple CountVectorizer. Here's why:\n",
    "\n",
    "-Term Frequency (TF): TF measures how frequently a term occurs in a document. It is calculated as the number of times a term appears in a document divided by the total number of terms in the document. TF gives importance to terms that occur frequently within a document.\n",
    "\n",
    "-Inverse Document Frequency (IDF): IDF measures the importance of a term in the entire corpus. It is calculated as the logarithm of the total number of documents divided by the number of documents containing the term. IDF gives less weight to terms that occur frequently across all documents in the corpus.\n",
    "When you use TF-IDF vectorization, you essentially weigh the importance of each term in a document based on both its frequency within that document (TF) and its rarity across all documents (IDF). This weighting scheme helps in:\n",
    "\n",
    "Reducing the Impact of Common Terms: Words like \"the\", \"and\", \"is\", etc., which occur frequently in almost all documents, can dominate the feature space when using simple term frequency counts. IDF helps in reducing the importance of such common terms.\n",
    "\n",
    "Highlighting Discriminative Terms: Terms that are frequent in a particular document but rare across other documents can be indicative of the document's content. TF-IDF gives more weight to such terms, making them more influential in the classification process.\n",
    "\n",
    "Handling Long Documents: In longer documents, the raw frequency of terms might be higher simply due to the document's length. TF-IDF normalizes the term frequencies, making them comparable across documents of varying lengths."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ee3a86ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:16:25.749549Z",
     "iopub.status.busy": "2024-05-03T20:16:25.749179Z",
     "iopub.status.idle": "2024-05-03T20:17:38.142988Z",
     "shell.execute_reply": "2024-05-03T20:17:38.141867Z"
    },
    "id": "ygV-XJc_sIkc",
    "outputId": "17a1ba24-40ce-4666-88bc-99b3a39bf168",
    "papermill": {
     "duration": 72.452077,
     "end_time": "2024-05-03T20:17:38.179566",
     "exception": false,
     "start_time": "2024-05-03T20:16:25.727489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sklearn Logistic Regression: 0.8722493887530562\n",
      "Custom Logistic Regression: 0.8624694376528117\n"
     ]
    }
   ],
   "source": [
    "X_train_vectorized, X_val_vectorized, X_test_vectorized = vectorize_data('tfidf-vectorizer', 1000, X_train, X_val, X_test) # FILL HERE\n",
    "\n",
    "# Fit logistic regression with grid search on your model\n",
    "param_grid = {'learning_rate': [1, 0.1, 0.01]}\n",
    "LRS_model = LogisticRegressionS()# FILL HERE\n",
    "grid_search = GridSearchCV(LRS_model, param_grid, cv=3) # FILL HERE\n",
    "grid_search.fit(X_train_vectorized, y_train) # FILL HERE\n",
    "\n",
    "# Fit sklearn logistic regression on your model\n",
    "LRSK_model = LogisticRegression(max_iter=1000) # FILL HERE\n",
    "LRSK_model.fit(X_train_vectorized, y_train) # FILL HERE\n",
    "\n",
    "# Compute accuracy of your model with grid search\n",
    "predictions = grid_search.predict(X_val_vectorized) # FILL HERE\n",
    "LRS_res = accuracy_score(y_val, predictions) # FILL HERE\n",
    "\n",
    "# Compute accuracy of sklearn logisitc regression\n",
    "y_pred = LRSK_model.predict(X_val_vectorized) # FILL HERE (predicting using the trained model)\n",
    "LRSK_res = accuracy_score(y_val, y_pred) # FILL HERE (computing accuracy)\n",
    "\n",
    "print('Sklearn Logistic Regression:', LRSK_res)\n",
    "print('Custom Logistic Regression:', LRS_res)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ef4a4c4",
   "metadata": {
    "id": "PBA6Fgpcn5EH",
    "papermill": {
     "duration": 0.033608,
     "end_time": "2024-05-03T20:17:38.247132",
     "exception": false,
     "start_time": "2024-05-03T20:17:38.213524",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Train your custom naive bayes model. Select the best smoothing parameter using validation set. (p4-5 10 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f9af87f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:17:38.293558Z",
     "iopub.status.busy": "2024-05-03T20:17:38.293162Z",
     "iopub.status.idle": "2024-05-03T20:17:38.306611Z",
     "shell.execute_reply": "2024-05-03T20:17:38.305459Z"
    },
    "id": "Xbzon9ifn5EH",
    "papermill": {
     "duration": 0.037328,
     "end_time": "2024-05-03T20:17:38.309142",
     "exception": false,
     "start_time": "2024-05-03T20:17:38.271814",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class NaiveBayesS:\n",
    "    def __init__(self, alpha=1):\n",
    "        '''\n",
    "        Initialize Laplace smoothing parameter\n",
    "        '''\n",
    "        self.alpha = alpha\n",
    "        self.class_probs = np.zeros(2)\n",
    "        self.word_probs = {0: None, 1: None}\n",
    "\n",
    "    def fit(self, X, y):\n",
    "        '''\n",
    "        Calculate class probabilities P(Y) and word probabilities P(X_i | Y)\n",
    "        '''\n",
    "        num_samples, num_features = X.shape\n",
    "\n",
    "        # Count occurrences of each class\n",
    "        self.class_probs[1] = np.sum(y)\n",
    "        self.class_probs[0] = num_samples - self.class_probs[1]\n",
    "\n",
    "        # Laplace smoothing for class probabilities\n",
    "        self.class_probs = (self.class_probs + self.alpha) / (num_samples + 2 * self.alpha)\n",
    "\n",
    "        # Count occurrences of words for each class\n",
    "        self.word_probs[0] = ((1 + self.alpha) / (num_features + self.alpha)) * np.ones(num_features)\n",
    "        self.word_probs[1] = ((1 + self.alpha) / (num_features + self.alpha)) * np.ones(num_features)\n",
    "\n",
    "        for i in range(num_samples):\n",
    "            for j in range(num_features):\n",
    "                self.word_probs[y[i]][j] += X[i][j]\n",
    "\n",
    "        total_word_count_0 = self.word_probs[0].sum()\n",
    "        total_word_count_1 = self.word_probs[1].sum()\n",
    "\n",
    "        self.word_probs[0] /= (total_word_count_0 + num_features * self.alpha)\n",
    "        self.word_probs[1] /= (total_word_count_1 + num_features * self.alpha)\n",
    "\n",
    "    def predict(self, X):\n",
    "        '''\n",
    "        Predict the class with the highest score\n",
    "        '''\n",
    "        num_samples, _ = X.shape\n",
    "        predictions = np.zeros(num_samples)\n",
    "\n",
    "        for i in range(num_samples):\n",
    "            scores = np.log(self.class_probs)\n",
    "            nonzero_indices = np.nonzero(X[i])[0]\n",
    "            for label in [0, 1]:\n",
    "                scores[label] += np.log(self.word_probs[label][nonzero_indices]).sum()\n",
    "            predictions[i] = np.argmax(scores)\n",
    "\n",
    "        return predictions.astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "7685e8c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:17:38.350102Z",
     "iopub.status.busy": "2024-05-03T20:17:38.349731Z",
     "iopub.status.idle": "2024-05-03T20:17:38.609247Z",
     "shell.execute_reply": "2024-05-03T20:17:38.608153Z"
    },
    "id": "icBorwHpwhXQ",
    "papermill": {
     "duration": 0.282882,
     "end_time": "2024-05-03T20:17:38.611743",
     "exception": false,
     "start_time": "2024-05-03T20:17:38.328861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Vectorize your data with count-vectorizer\n",
    "X_train_vectorized, X_val_vectorized, X_test_vectorized = vectorize_data('count-vectorizer', 1000, X_train, X_val, X_test) # FILL HERE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "25b00a4b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:17:38.652815Z",
     "iopub.status.busy": "2024-05-03T20:17:38.652387Z",
     "iopub.status.idle": "2024-05-03T20:17:50.070445Z",
     "shell.execute_reply": "2024-05-03T20:17:50.069304Z"
    },
    "id": "gtw7lAc0n5EH",
    "papermill": {
     "duration": 11.44188,
     "end_time": "2024-05-03T20:17:50.073307",
     "exception": false,
     "start_time": "2024-05-03T20:17:38.631427",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Fit your naive bayes model\n",
    "NBS_model = NaiveBayesS()# FILL HERE\n",
    "NBS_model.fit(X_train_vectorized, y_train)# FILL HERE"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fd43877",
   "metadata": {
    "id": "KNPZDTD_n5EH",
    "papermill": {
     "duration": 0.019557,
     "end_time": "2024-05-03T20:17:50.113253",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.093696",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Train sklearn naive bayes (p4-6 5 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "740341a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:17:50.155018Z",
     "iopub.status.busy": "2024-05-03T20:17:50.154340Z",
     "iopub.status.idle": "2024-05-03T20:17:50.435056Z",
     "shell.execute_reply": "2024-05-03T20:17:50.433778Z"
    },
    "id": "DyC3DNdon5EH",
    "outputId": "d0755220-5c45-4c1c-e71d-82cd146c368f",
    "papermill": {
     "duration": 0.304483,
     "end_time": "2024-05-03T20:17:50.437573",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.133090",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "MultinomialNB()"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.naive_bayes import MultinomialNB\n",
    "\n",
    "NBSK_model =MultinomialNB() # FILL HERE\n",
    "NBSK_model.fit(X_train_vectorized, y_train) # FILL HERE"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73e161fa",
   "metadata": {
    "id": "a1HrwWAln5EI",
    "papermill": {
     "duration": 0.020097,
     "end_time": "2024-05-03T20:17:50.478057",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.457960",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Compare sklearn and you naive bayes perfromance on validation set (p4-7 5 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "6a4b3430",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:17:50.520202Z",
     "iopub.status.busy": "2024-05-03T20:17:50.519798Z",
     "iopub.status.idle": "2024-05-03T20:17:50.565852Z",
     "shell.execute_reply": "2024-05-03T20:17:50.564644Z"
    },
    "id": "MrXra7BEn5EI",
    "outputId": "55806b8d-f75b-4e9d-cad1-8a864fc1a184",
    "papermill": {
     "duration": 0.071154,
     "end_time": "2024-05-03T20:17:50.569415",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.498261",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sklearn Naive Bayes: 0.8612469437652812\n",
      "Custom Naive Bayes: 0.8612469437652812\n"
     ]
    }
   ],
   "source": [
    "# Compute accuracy of your naive bayes model\n",
    "predictions = NBS_model.predict(X_val_vectorized) # FILL HERE\n",
    "NBS_res = accuracy_score(y_val, predictions) # FILL HERE\n",
    "\n",
    "# Compute accuracy of sklearn naive bayes model\n",
    "y_pred = NBSK_model.predict(X_val_vectorized) # FILL HERE\n",
    "NBSK_res = accuracy_score(y_val, y_pred) # FILL HERE\n",
    "\n",
    "print('Sklearn Naive Bayes:', NBSK_res)\n",
    "print('Custom Naive Bayes:', NBS_res)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1675e51a",
   "metadata": {
    "id": "31E0OyKPn5EI",
    "papermill": {
     "duration": 0.033666,
     "end_time": "2024-05-03T20:17:50.637956",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.604290",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Final Results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce1e4b1f",
   "metadata": {
    "id": "lSKGSE7An5EI",
    "papermill": {
     "duration": 0.023645,
     "end_time": "2024-05-03T20:17:50.695204",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.671559",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Compare your models and sklearn models performance on Test set (p4-8 5 points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "768d0b57",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-03T20:17:50.736700Z",
     "iopub.status.busy": "2024-05-03T20:17:50.736329Z",
     "iopub.status.idle": "2024-05-03T20:17:50.807647Z",
     "shell.execute_reply": "2024-05-03T20:17:50.806540Z"
    },
    "id": "lmSaTU-tn5EI",
    "outputId": "f2ca1dc5-1995-43a3-fdf8-21d901592960",
    "papermill": {
     "duration": 0.095426,
     "end_time": "2024-05-03T20:17:50.810689",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.715263",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sklearn Naive Bayes: 0.8612469437652812\n",
      "sklearn Logistic Regression: 0.8594132029339854\n",
      "custom Naive Bayes: 0.8551344743276283\n",
      "custom Logistic Regression: 0.8380195599022005\n"
     ]
    }
   ],
   "source": [
    "# compute accuray of sklearn naive bayes model\n",
    "y_pred = NBSK_model.predict(X_test_vectorized)\n",
    "NBS_res = accuracy_score(y_test, y_pred)\n",
    "\n",
    "# compute accuracy of your naive bayes model\n",
    "predictions = NBS_model.predict(X_test_vectorized)\n",
    "NBS_res = accuracy_score(y_test, predictions)\n",
    "\n",
    "# compute accuracy of your logisitc regression model using grid search\n",
    "predictions = grid_search.predict(X_test_vectorized)\n",
    "LRS_res = accuracy_score(y_test, predictions)\n",
    "\n",
    "# compute accuracy of sklearn logistic regression model\n",
    "y_pred = LRSK_model.predict(X_test_vectorized)\n",
    "LRSK_res = accuracy_score(y_test, y_pred)\n",
    "\n",
    "print('sklearn Naive Bayes:', NBSK_res)\n",
    "print('sklearn Logistic Regression:', LRSK_res)\n",
    "print('custom Naive Bayes:', NBS_res)\n",
    "print('custom Logistic Regression:', LRS_res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d90d222c",
   "metadata": {
    "id": "x0gat69CotVD",
    "papermill": {
     "duration": 0.033842,
     "end_time": "2024-05-03T20:17:50.882636",
     "exception": false,
     "start_time": "2024-05-03T20:17:50.848794",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 973.133016,
   "end_time": "2024-05-03T20:17:51.644194",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-03T20:01:38.511178",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
